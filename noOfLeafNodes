/**********************************************************

    Following is the Binary Tree Node class structure:

    template <typename T>
    class BinaryTreeNode {
      public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
                this -> data = data;
                left = NULL;
                right = NULL;
        }
    };
    
***********************************************************/

int noOfLeafNodes(BinaryTreeNode<int> *root){
    if(root==NULL){
        return 0;
    }
    queue <BinaryTreeNode<int>*> q;
    q.push(root);

    int count=0;
    while(!q.empty()){
        BinaryTreeNode<int>* temp=q.front();
        // if(temp->left->data==-1){
        //     if(temp->right->data==-1){
        //         count++;
        //     }
        // }
        q.pop();
        if (temp->left == NULL && temp->right == NULL) {
            count++;
        }

        if(temp->left){
            q.push(temp->left);
        }
        if(temp->right){
            q.push(temp->right);
        }
    }
    return count;
}

// void inorder(BinaryTreeNode<int> * root, int &count) {
//     //base case
//     if(root == NULL) {
//         return ;
//     }

//     inorder(root->left, count);
   	
//     //leaf node
//     if(root->left == NULL && root->right == NULL) {
//         count++;
//     }
    
//     inorder(root->right, count);

// }


// int noOfLeafNodes(BinaryTreeNode<int> *root){
//     int cnt = 0;
//     inorder(root, cnt);
//     return cnt;
// }
