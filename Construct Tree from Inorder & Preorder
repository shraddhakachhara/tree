class Solution{
    
    int findpos(int in[], int element,int inorderstart, int inorderend){
        for(int i=inorderstart;i<=inorderend;i++){
            if(in[i]==element){
                return i;
            }
        }
        return -1;
    }
    
    Node* solve(int in[],int pre[], int n, int &index,int inorderstart, int inorderend){
        if(index>=n || inorderstart>inorderend){
            return NULL;
        }
        int element=pre[index++];
        Node* root=new Node(element);
        int position=findpos(in,element,inorderstart,inorderend);
        
        root->left=solve(in,pre,n,index,inorderstart,position-1);
        root->right=solve(in,pre,n,index,position+1,inorderend);
        
        return root;
    }
    
    public:
    Node* buildTree(int in[],int pre[], int n)
    {
        int index=0;
        Node* root=solve(in,pre,n,index,0,n-1);
        return root;
    }
};
